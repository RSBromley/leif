on:
  push:
  # Sequence of patterns matched against refs/tags
    tags:
      - 'release-*' # Push events to matching release-*, i.e. release-v1.0.0

  env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

  name: Docker Build and Release

jobs:
  vars:
    name: Output build variables
    runs-on: ubuntu-latest
    outputs:
      appImage: ${{ fromJSON(steps.variables.outputs.result).appImage }}
      branch: ${{ fromJSON(steps.variables.outputs.result).branch }}
      imagePath: ${{ fromJSON(steps.variables.outputs.result).imagePath }}
    steps:
      - id: variables
        name: Script CI variables
        uses: actions/github-script@v4
        with:
          script: |
            const branch = context.ref.split('/').pop();
            const { REGISTRY, IMAGE_NAME } = process.env;
            const imagePath = `${REGISTRY}/${IMAGE_NAME}/${branch}`;
            const appImage = `${imagePath}/app`;
            core.info(`Commit to branch '${branch}'`);
            core.info(`Building docker image for '${appImage}'`);
            core.exportVariable('GITHUB_BRANCH_SLUG', branch);
            core.exportVariable('APP_IMAGE', appImage);
            return { branch, appImage, imagePath };

  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Set env variables
        run: |
          echo "APP_IMAGE=${{needs.vars.outputs.appImage}}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{needs.vars.outputs.branch}}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false


      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Docker image
      run: |
          docker pull ${{ env.APP_IMAGE }}:latest || true
          docker tag ${{ env.APP_IMAGE }}:latest ${{ env.APP_IMAGE }}:release
          docker push ${{ env.APP_IMAGE }}:release
          docker tag ${{ env.APP_IMAGE }}:latest ${{ env.APP_IMAGE }}:${{ github.ref_name }}
          docker push ${{ env.APP_IMAGE }}:${{ github.ref_name }}
